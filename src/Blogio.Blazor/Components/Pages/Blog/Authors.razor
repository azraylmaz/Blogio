@page "/authors"
@using C = Blogio.Blog
@inject C.IBlogAppService AppSvc
@inject NavigationManager Nav


<PageTitle>Authors</PageTitle>

<Card>
    <CardHeader><h5>Authors</h5></CardHeader>
    <CardBody>
        @if (authors.Count == 0)
        {
            <div>Author not found.</div>
        }
        else
        {
            <DataGrid TItem="C.AuthorDto" Data="@authors" ShowPager="false" Responsive="true">
                <DataGridColumns>
                    <DataGridColumn TItem="C.AuthorDto" Field="@nameof(C.AuthorDto.UserName)" Caption="User" />
                    <DataGridColumn TItem="C.AuthorDto" Caption="Name Surname">
                        <DisplayTemplate Context="a">
                            @((!string.IsNullOrWhiteSpace(a.Name) ? $"{a.Name} {a.Surname}" : "-"))
                        </DisplayTemplate>
                    </DataGridColumn>
                    <DataGridColumn TItem="C.AuthorDto" Field="@nameof(C.AuthorDto.Email)" Caption="E-mail" />
                    <DataGridColumn TItem="C.AuthorDto" Field="@nameof(C.AuthorDto.PostCount)" Caption="Post Count" />
                    <DataGridColumn TItem="C.AuthorDto">
                        <DisplayTemplate Context="a">
                            <Button Size="Size.Small" Color="Color.Light"
                                    Clicked="@(() => NavToAuthorPosts(a.Id))">
                                This author's posts
                            </Button>
                        </DisplayTemplate>
                    </DataGridColumn>
                </DataGridColumns>
            </DataGrid>
        }
    </CardBody>
</Card>

@code {
    private List<C.AuthorDto> authors = new();

    protected override async Task OnInitializedAsync()
    {
        var res = await AppSvc.GetAuthorsAsync();
        authors = res.Items?.ToList() ?? new();
    }

    private void NavToAuthorPosts(Guid id) => Nav.NavigateTo($"/blog?authorId={id}");
}